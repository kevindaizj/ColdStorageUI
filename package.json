{
  "name": "coin-cold-storage-ui",
  "version": "0.0.0",
  "description": "Coin Cold Storage UI",
  "author": {
    "name": "SoBn",
    "email": "somebody@sobn.com"
  },
  "main": "dist/electron/main.js",
  "scripts": {
    "ng": "ng",
    "web:serve": "npm run color-less && ng serve",
    "web:start": "npm run color-less && ng serve -o --port=4201 --baseHref=/  --proxy-config proxy.conf.json",
    "web:build": "npm run color-less && ng build --prod --build-optimizer",
    "test": "ng test",
    "lint": "npm run lint:ts && npm run lint:style",
    "e2e": "ng e2e",
    "analyze": "npm run color-less && ng build --prod --build-optimizer --stats-json",
    "test-coverage": "ng test --code-coverage --watch=false",
    "color-less": "node scripts/color-less.js",
    "icon": "ng g ng-alain:plugin icon",
    "lint:ts": "tslint -p src/tsconfig.app.json -c tslint.json 'src/**/*.ts'",
    "lint:style": "stylelint 'src/**/*.less' --syntax less",
    "lint-staged": "lint-staged",
    "tslint-check": "tslint-config-prettier-check ./tslint.json",
    "hmr": "ng serve -c=hmr",
    "postinstall": "npm run postinstall:electron && electron-builder install-app-deps",
    "postinstall:web": "node postinstall-web",
    "postinstall:electron": "node postinstall",
    "electron:build": "tsc -p tsconfig-electron.json",
    "electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:build && nodemon --watch electron --exec \"npm run electron:build && electron . --serve \"",
    "dev": "npm-run-all -p web:serve electron:serve",
    "build:prod": "npm run postinstall:electron && npm run electron:build && npm run web:build",
    "debug:prod": "npm run build:prod && electron .",
    "electron:windows": "npm run build:prod && electron-builder build --windows"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~7.2.0",
    "@angular/common": "~7.2.0",
    "@angular/compiler": "~7.2.0",
    "@angular/core": "~7.2.0",
    "@angular/forms": "~7.2.0",
    "@angular/platform-browser": "~7.2.0",
    "@angular/platform-browser-dynamic": "~7.2.0",
    "@angular/router": "~7.2.0",
    "@delon/abc": "^7.4.0",
    "@delon/acl": "^7.4.0",
    "@delon/auth": "^7.4.0",
    "@delon/cache": "^7.4.0",
    "@delon/chart": "^7.4.0",
    "@delon/form": "^7.4.0",
    "@delon/mock": "^7.4.0",
    "@delon/theme": "^7.4.0",
    "@delon/util": "^7.4.0",
    "@ngx-translate/core": "^11.0.1",
    "@ngx-translate/http-loader": "^4.0.0",
    "@types/crypto-js": "^3.1.43",
    "ajv": "^6.10.0",
    "core-js": "^2.5.4",
    "crypto-js": "^3.1.9-1",
    "editorconfig-tools": "^0.1.1",
    "electron-reload": "^1.4.0",
    "husky": "^1.3.1",
    "lint-staged": "^8.1.0",
    "moment": "^2.24.0",
    "ng-alain": "^7.4.0",
    "ng-zorro-antd": "^7.3.3",
    "prettier": "^1.16.1",
    "prettier-stylelint": "^0.4.2",
    "qrious": "^4.0.2",
    "rxjs": "~6.3.3",
    "screenfull": "^4.2.0",
    "stylelint": "^10.0.1",
    "stylelint-config-standard": "^18.3.0",
    "tslib": "^1.9.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-language-service": "^0.9.9",
    "zone.js": "~0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.13.0",
    "@angular/cli": "~7.3.3",
    "@angular/compiler-cli": "~7.2.0",
    "@angular/language-service": "~7.2.0",
    "@angularclass/hmr": "^2.1.3",
    "@delon/testing": "^7.4.0",
    "@types/jasmine": "~2.8.8",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "~8.9.4",
    "codelyzer": "~4.5.0",
    "electron": "^5.0.1",
    "electron-builder": "^20.40.2",
    "jasmine-core": "~2.99.1",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~6.4.2",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~1.1.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "less-bundle-promise": "^1.0.7",
    "ng-alain": "^7.4.0",
    "ng-alain-codelyzer": "^0.0.1",
    "nodemon": "^1.19.0",
    "npm-run-all": "^4.1.5",
    "protractor": "~5.4.4",
    "ts-node": "~7.0.0",
    "tslint": "~5.11.0",
    "typescript": "~3.2.2",
    "wait-on": "^3.2.0"
  },
  "lint-staged": {
    "*.{cmd,html,json,md,sh,txt,xml,yml}": [
      "editorconfig-tools fix",
      "git add"
    ],
    "*.ts": [
      "npm run lint:ts",
      "prettier --write",
      "git add"
    ],
    "*.less": [
      "npm run lint:style",
      "prettier --write",
      "git add"
    ],
    "ignore": [
      "src/assets/*"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint-staged"
    }
  }
}
